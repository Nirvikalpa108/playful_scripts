AWSTemplateFormatVersion: 2010-09-09
Description: Sets up anetcalc application (loadbalancer and instance).  

Parameters:
  AMI:
    Description: AMI for the instance
    Type: AWS::EC2::Image::Id
  VpcId:
    Description: The VPC in which the instance will run
    Type: AWS::EC2::VPC::Id
  Subnets:
    Description: The subnets where the instance can run
    Type: List<AWS::EC2::Subnet::Id>
  KeyName:
    Description: An ssh keypair to put on the instance
    Type: AWS::EC2::KeyPair::KeyName
  GuardianAccessCidr:
    Description: A CIDR from which SSH access to the instance is allowed
    Type: String
    AllowedPattern: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$
    ConstraintDescription: Parameter should be a CIDR block e.g. "1.2.3.4/32"

Resources:
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: HTTPS access to the load balancer from the CIDR block
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 5000
        ToPort: 5000
        CidrIp:
          Ref: GuardianAccessCidr
      Tags:
      - Key: App
        Value: amina-winning
          
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: security group
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      # allow ELB to talk to instance
      - IpProtocol: tcp
        FromPort: 5000
        ToPort: 5000
        SourceSecurityGroupId:
          Ref: LoadBalancerSecurityGroup
      # allow SSH access to specified IP range
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp:
          Ref: GuardianAccessCidr
      SecurityGroupEgress: 
      # allow SSH access to specified IP range     
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: App
        Value: amina-winning

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - Ref: InstanceRole

  LoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Listeners:
      - LoadBalancerPort: 5000
        Protocol: TCP
        InstanceProtocol: TCP
        InstancePort: 5000
      CrossZone: true
      HealthCheck:
        Target: TCP:5000
        HealthyThreshold: 2
        UnhealthyThreshold: 10
        Interval: 30
        Timeout: 10
      Subnets:
        Ref: Subnets
      SecurityGroups:
      - Ref: LoadBalancerSecurityGroup
      Tags:
      - Key: App
        Value: amina-winning
  
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: AMI
      SecurityGroups:
      - Ref: InstanceSecurityGroup
      InstanceType: t3.nano
      IamInstanceProfile:
        Ref: InstanceProfile
      AssociatePublicIpAddress: true
      UserData:
        Fn::Base64: |
          #!/bin/bash -ev
          echo yesss you are winning adam > /tmp/winning.txt
          apt-get update
          apt-get install python2.7 -y
          cd ~ubuntu
          git clone https://github.com/Nirvikalpa108/winning.git
          cd winning/anetcalc
          python2.7 net.py 5000
  
  AutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: 
      - eu-west-1a
      VPCZoneIdentifier:
        Ref: Subnets
      LaunchConfigurationName:
        Ref: LaunchConfig
      MinSize: 0
      MaxSize: 1
      DesiredCapacity: 1
      HealthCheckType: ELB
      HealthCheckGracePeriod: 120
      LoadBalancerNames:
      - Ref: LoadBalancer
      Tags:
      - Key: App
        Value: amina-winning
        PropagateAtLaunch: true
      - Key: Name
        Value: amina-winning
        PropagateAtLaunch: true

Outputs:
  LoadBalancerUrl:
    Value:
      !GetAtt LoadBalancer.DNSName
      